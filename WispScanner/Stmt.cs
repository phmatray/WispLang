// This file has been generated by GenerateAst.

namespace WispScanner;

public abstract class Stmt
{
    public interface IVisitorVoid
    {
        void VisitBlockStmt(Block stmt);
        void VisitExprStmtStmt(ExprStmt stmt);
        void VisitPrintStmt(Print stmt);
        void VisitVarStmt(Var stmt);
    }

    public class Block : Stmt
    {
        public Block(List<Stmt> statements)
        {
            Statements = statements;
        }

        public List<Stmt> Statements { get; }

        public override void Accept(IVisitorVoid visitor)
        {
            visitor.VisitBlockStmt(this);
        }
    }

    public class ExprStmt : Stmt
    {
        public ExprStmt(Expr expression)
        {
            Expression = expression;
        }

        public Expr Expression { get; }

        public override void Accept(IVisitorVoid visitor)
        {
            visitor.VisitExprStmtStmt(this);
        }
    }

    public class Print : Stmt
    {
        public Print(Expr expression)
        {
            Expression = expression;
        }

        public Expr Expression { get; }

        public override void Accept(IVisitorVoid visitor)
        {
            visitor.VisitPrintStmt(this);
        }
    }

    public class Var : Stmt
    {
        public Var(Token name, Expr? initializer)
        {
            Name = name;
            Initializer = initializer;
        }

        public Token Name { get; }
        public Expr? Initializer { get; }

        public override void Accept(IVisitorVoid visitor)
        {
            visitor.VisitVarStmt(this);
        }
    }


    public abstract void Accept(IVisitorVoid visitor);
}
